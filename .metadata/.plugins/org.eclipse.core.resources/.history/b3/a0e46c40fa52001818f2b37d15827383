public class TimeClass3 {

	private int month;
	private int day;
	private int year;

	// Constructor
	public TimeClass3(int month, int day, int year) {
		this.month = month;
		this.day = day;
		this.year = year;

		System.out.println(String.format("Constructor is for %s\n", this));
		// System.out.printf("Constructor is for %s\n", this);

		// "this" in print format will Override method of toString means that
		// when in other class make object from this class and do not call a
		// method with it!!! then object must return something to that class in
		// this case other class called String line with it's method of "Print"
		// that always print a String line
		// anyway here this "this" means "this.object" that build in other class
		// and point to all of "this" class
		// and in the other hand 'that' class request an String line with
		// 'Print' method that must be answer with a String by "this" class so
		// "this" (arg) that isn't a string, will use "toString" method (it is a
		// converter)to convert args in this class to string type and return to
		// that class that called

		// ATTENTION: if we have not toString method in this class, this class
		// use it's parent toString method (Object Class)

		// HINT: methods of equals() and hashCode() is the same to call like
		// toString() if they be needed

	}

	// inner method of Java called by Ctrl+Space like Override

	@Override
	// a TAG to tell the java what's the point of this method
	public String toString() {
		// return "TimeClass{" + "month=" + month + ", day=" + day + ", year="
		// + year;

		return String.format("%02d/%02d/%d", month, day, year);
	}
}
